[versions]
#last versions not update
#
compottie = "2.0.0-rc01"
konnection = "1.3.1"
kotlin = "2.1.0"
compose = "1.7.0"
agp = "8.10.1"
androidx-activityCompose = "1.9.3"
androidx-compose-bom = "2024.06.00"
androidx-uiTest = "1.7.5"
buildConfig = "5.5.1"
kotlinx-coroutines = "1.9.0"
ktor = "3.0.2"
composeIcons = "1.1.1"
kotlinx-serialization = "1.7.2"
kotlinx-datetime = "0.6.0"
koin = "4.0.1-Beta1"
decompose = "3.2.2"
decompose-extancions = "3.2.2"
essenty = "2.3.0"
core-splashscreen = "1.0.1"
kotlinx-collections-immutable = "0.3.7"

androidxDataStore = "1.1.1"
multiplatformSetting = "1.2.0"
permissions = "0.18.0"
startupRuntime = "1.2.0"
uiToolingPreview = "1.7.3"
rebugger = "1.0.0-rc03"
osm-droid-android = "6.1.18"
mapcomposeMp = "0.9.3"
gms = "4.4.2"
crashlytics = "3.0.2"
firebaseBom = "33.6.0"
play-services-location = "21.2.0"

ksp = "2.1.0-1.0.29"
room = "2.7.0-alpha12"
sqlite = "2.5.0-alpha12"
firebaseCommon = "21.0.0"
jetbrainsKotlinJvm = "2.1.0"
jetbrainsKotlinWrappers = "1.0.0-pre.608"
workRuntime = "2.10.0"
coreKtx = "1.16.0"
material = "1.12.0"
core = "1.16.0"

[libraries]
#web
jetbrains-kotlinWrappers-kotlinWrappersBom = { group = "org.jetbrains.kotlin-wrappers", name = "kotlin-wrappers-bom", version.ref = "jetbrainsKotlinWrappers" }
kotlin-browser = { module = "org.jetbrains.kotlin-wrappers:kotlin-browser" }

#android
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "uiToolingPreview" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "uiToolingPreview" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "core-splashscreen" }
androidx-startup-runtime = { group = "androidx.startup", name = "startup-runtime", version.ref = "startupRuntime" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }

material = { group = "com.google.android.material", name = "material", version.ref = "material" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "play-services-location" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "workRuntime" }

#Images - Compottie
compottie = { module = "io.github.alexzhirkevich:compottie", version.ref = "compottie" }
compottie-dot = { module = "io.github.alexzhirkevich:compottie-dot", version.ref = "compottie" }
compottie-network = { module = "io.github.alexzhirkevich:compottie-network", version.ref = "compottie" }
compottie-resources = { module = "io.github.alexzhirkevich:compottie-resources", version.ref = "compottie" }
#Images
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
composeIcons-tablerIcons = { module = "br.com.devsrsouza.compose.icons:tabler-icons", version.ref = "composeIcons" }


#tooling
ui-tooling-preview = { module = "org.jetbrains.com.ui:ui-tooling-preview", version.ref = "compose" }
rebugger = { module = "io.github.theapache64:rebugger", version.ref = "rebugger" }

#Konnection KMP
konnection = { module = "dev.tmapps:konnection", version.ref = "konnection" }

#Map KMP
mapcompose-mp = { module = "ovh.plrapps:mapcompose-mp", version.ref = "mapcomposeMp" }

#Permission KMP
permissions = { module = "dev.icerock.moko:permissions", version.ref = "permissions" }
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissions" }

#Database
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-runtime-android = { group = "androidx.room", name = "room-runtime-android", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
sqlite = { module = "androidx.sqlite:sqlite", version.ref = "sqlite" }
room-gradle-plugin = { module = "androidx.room:room-gradle-plugin", version.ref = "room" }

#Data store (preferences)
androidx-data-store-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDataStore" }
androidx-data-store-preferences-android = { module = "androidx.datastore:datastore-preferences-android", version.ref = "androidxDataStore" }
androidx-data-store = { module = "androidx.datastore:datastore", version.ref = "androidxDataStore" }
androidx-data-store-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "androidxDataStore" }

#mulitplatform-settings
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSetting" }

#Kotlin coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-wasm-js = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-wasm-js", version.ref = "kotlinx-coroutines" }

#kotlin
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }

#ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

#decompose
decompose-decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensionsComposeJetbrains = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose-extancions" }
essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }

#di
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

#tests
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }

#firebase
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-common = { group = "com.google.firebase", name = "firebase-common", version.ref = "firebaseCommon" }

[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
room = { id = "androidx.room", version.ref = "room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-services = { id = "com.google.gms.google-services", version.ref = "gms" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

